#!/usr/bin/perl

# SkyKitteh at github: http://github.com/ollej/skykitteh
# Mojolicious documentation: http://mojolicio.us/
#
# Neat things to add:
# * Revision control, rollback to earlier version.
# * Syntax highlighting
# * Logo - Kitty smiley in cloud?
# * AJAX updating / JSON responses for backend
# * See more in issues on github page. See above.

use warnings;
use strict;

use File::Slurp qw(read_file write_file);
use Digest::MD5 qw(md5_hex);

use Mojolicious::Lite;

get '/' => sub {
	my $self = shift;
	my $code = read_file($0);
    $self->stash('filename' => $0);
	$self->stash('code' => $code);
	$self->stash('checksum', md5_hex($code));
	$self->render('showform');
};

get '/edit/(*filename)' => sub {
	my $self = shift;
    my $filename = $self->stash('filename');
        if (-d $filename) {
          return $self->render('error', msg => "No can haz edit dir!");
        }
	my $code = read_file($filename, err_mode => 'quiet');
	$self->stash('code' => $code);
	$self->stash('checksum', md5_hex($code));
	$self->render('showform');
};

post '/' => sub {
	my $self = shift;
	my $filename = $self->param('filename');
	my $code = $self->param('code');
	$code =~ s/\r$//gm;

	if (!$filename) {
	    $self->stash('msg' => "Missing filename.");
	    $self->render('error');
	    return;
	}

	my $commit_message = $self->param('commit_message');
	write_file("/tmp/commit_message.txt", $commit_message);
	
	my $oldcode = read_file($filename, err_mode => 'quiet');
	if ($self->param('checksum') ne md5_hex($oldcode)) {
		$self->stash('msg' => "Code has been updated since you loaded the page, the MD5 checksum didn't match.");
		$self->render('error');
		return;
	}
	write_file($filename, { binmode => ':utf8', atomic => 1 }, $code);

        my $status = system("perl skykitteh.t");
	if ($status) {
	    write_file($filename, { binmode => ':utf8', atomic => 1 }, $oldcode);
	    $self->stash('msg' => "Please don't kill SkyKitteh.");
	    $self->render('error');
	    return;
	}

	$self->redirect_to('/');
};

post '/upload' => sub {
    my $self = shift;
    my $file = $self->req->upload('file');
    if (!$file) {
	    $self->stash('msg' => "Upload failed.");
	    $self->render('error');
	    return;
    }
    my $filename = $file->filename;
    $file->move_to('./' . $filename);
    $self->redirect_to('/');
};

get '/motd' => sub {
    my $self = shift;
    my $add = $self->param('add');
    if ($add) {
	store_motd($add);
    }

    my $motd = 'I can haz code nomz?';

    if (open MOTD, '<', 'motd.txt') {
	my @motds = <MOTD>;
	close MOTD;
	if (@motds) {
	    $motd = @motds[time % scalar(@motds)];
	}
    }

    $self->stash('msg' => $motd);
    $self->render('motd');
};

sub store_motd
{
    my ($motd) = @_;

    if (open MOTD, '>>', 'motd.txt') {
	print MOTD $motd."\n";
	close MOTD;
    }
}

app->start;

__DATA__
